@use 'sass:color';
@use '../common';

.menu-controls {
    display: flex;
    flex-direction: column;
    transition: opacity .3s;
    // Equal to var(--menuText1Normal) in Default theme, but with other themes
    // this variable changes to a dark color, and we want to always have a light
    // color here.
    color: rgba(255, 255, 255, 0.8);

    @at-root [class*="exit-active"] & {
        opacity: 0;
    }

    @at-root [class*="enter-active"] & {
        opacity: 1;
    }

    &-error {
        // Can't mix a CSS variable with alpha in this version of CSS, so we
        // have to copy the value here.
        $vanillaAccentColorDark: #1e83aa;

        margin-right: 8rem;
        display: flex;
        flex-direction: column;
        border-radius: 12rem;
        background-color: color.change($vanillaAccentColorDark, $alpha: 0.55);
        backdrop-filter: var(--menuBlur);
        padding: 16rem;
        line-height: 1.35;
        font-size: var(--fontSizeL);

        &-header {
            margin-bottom: 16rem;
            display: flex;

            &-image {
                flex: 1 1 40%;
                max-width: 150rem;
                margin-right: 16rem;
                background-size: contain;
                background-repeat: no-repeat;
                background-position: center;
            }

            &-text {
                flex: 1 1;
                display: flex;
                flex-direction: column;
                font-size: 130%;

                strong {
                    font-size: 130%;
                }
            }
        }

        &-gameplay-not-affected {
            margin-top: 8rem;
            font-size: var(--fontSizeXL);
        }
    }

    &-city-stats, &-buttons {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        // Makes sense here + avoids a bug in cohtml's layout engine.
        align-items: flex-start;
    }

    &-names, &-city-stats, &-buttons {
        @include common.fade-and-slide-in;
    }

    &-city-stats {
        animation-delay: .2s;
    }

    &-buttons {
        animation-delay: .4s;
    }

    &-names {
        position: relative;
        display: flex;
        flex-direction: column;
        margin-bottom: 45rem;
        text-shadow: 0 2rem 10rem var(--panelColorDark);
        font-size: calc(30rem * var(--fontScale));

        &:hover &-menu, &-show-menu &-menu {
            opacity: 1;
            transform: translate(0, 0);
        }

        &-menu {
            margin-bottom: 10rem;
            opacity: 0;
            transform: translate(0, 10rem);
            transition: opacity .3s ease-in-out, transform .3s ease-in-out;

            &-button {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 50rem;
                height: 50rem;

                &:hover svg {
                    opacity: 1;
                }

                svg {
                    width: 28rem;
                    height: 28rem;
                    fill: var(--menuText1Normal);
                    opacity: .8;
                }
            }
        }

        &-city {
            font-size: calc(45rem * var(--fontScale));
            font-weight: normal;
        }
    }

    &-city-stats {
        margin-bottom: 15rem;
    }

    &-city-stats span {
        margin-right: 15rem;
        margin-bottom: 15rem;

        // Normally we would not have to use a hardcoded height here, but this
        // circumvents a cohtml layout bug where images have trouble stretching
        // to the height of this container (and that depended on the flex
        // configuration of the parents too, so this seems to be the most robust
        // way to deal with it).
        height: 40rem;
        display: flex;
        align-items: center;
        @include common.border-radius(var(--panelRadius));
        background-color: var(--menuPanel1);
        backdrop-filter: var(--menuBlur);
        padding: 0 12rem;

        // This circumvents a rare bug where a span element can collapse
        // in a random way, a bug in cohtml's layout engine.
        white-space: nowrap;

        img {
            width: 22rem;
            height: 100%;
            margin-right: 10rem;
            filter: drop-shadow(0 1rem .4rem var(--panelColorNormal));
        }
    }

    &-buttons {
        $vanilla-button-height: 56rem;

        pointer-events: auto;
        margin-top: 25rem;

        &-button-group {
            display: flex;
            margin-right: 15rem;

            // Can't use shortcut property with variable (cohtml bug).
            //noinspection CssReplaceWithShorthandSafely
            border-top-left-radius: var(--panelRadius);
            //noinspection CssReplaceWithShorthandSafely
            border-top-right-radius: var(--panelRadius);
            //noinspection CssReplaceWithShorthandSafely
            border-bottom-right-radius: var(--panelRadius);
            //noinspection CssReplaceWithShorthandSafely
            border-bottom-left-radius: var(--panelRadius);
            overflow: hidden;

            background-color: var(--menuPanel1);
            backdrop-filter: var(--menuBlur);

            button {
                margin-right: 0;
                background-color: transparent;
                backdrop-filter: none;
                border-radius: 0;
            }
        }

        button {
            // Override a Vanilla style on a button class
            margin-top: 0 !important;
        }

        &-button {
            margin-right: 15rem;

            padding-left: 15rem !important;
            padding-right: 15rem !important;

            [class*="icon"] {
                margin-right: 15rem;
            }
        }

        &-button-icon {
            margin-right: 15rem;

            width: $vanilla-button-height;
            height: $vanilla-button-height;
            display: flex;
            justify-content: center;
            padding: 0 !important;

            [class*="label"] {
                display: none;
            }

            [class*="icon"] {
                margin: 0;
            }
        }

        &-button-previous [class*="icon"] {
            transform: rotate(180deg);
        }
    }
}
